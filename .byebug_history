continue
quit
skater["info"]["lastName"]
skater["info"]["lastName"].slice! "{I}"
continue
high
low
next
exempt_zero
exempt_zeero
quit
continue
exempt_zero
continue
exempt_zero
quit
@exempt_zero_ages
quit
profile
season_profile
continue
birthdate
continue
url
continue
full_name
continue
full_name
url
doc.css('.roster tr')[10].to_s
doc.css('.roster tr')[10]
doc.css('.roster tr')
quit
players
players.update_attributes(height: height, weight: weight, shoots: shoots, birthdate: birthdate)
continue
shoots
weight
height
profile_doc.css('body > section.main_content.clearfix > div > div.content_left > div.innerwrapper > div:nth-child(1) > div > div.col-md-8.col-md-pull-4 > section > div.table-view > div.row > div.col-sm-7.pad-right-0 > ul > li:nth-child(1) > div.col-xs-8.fac-lbl-dark').text.strip
profile_doc.css('body > section.main_content.clearfix > div > div.content_left > div.innerwrapper > div:nth-child(1) > div > div.col-md-8.col-md-pull-4 > section > div.table-view > div.row > div.col-sm-7.pad-right-0 > ul > li:nth-child(1) > div.col-xs-8.fac-lbl-dark').text
profile_doc.css('body > section.main_content.clearfix > div > div.content_left > div.innerwrapper > div:nth-child(1) > div > div.col-md-8.col-md-pull-4 > section > div.table-view > div.row > div.col-sm-7.pad-right-0 > ul > li:nth-child(1) > div.col-xs-8.fac-lbl-dark').to_s
profile_doc.css('body > section.main_content.clearfix > div > div.content_left > div.innerwrapper > div:nth-child(1) > div > div.col-md-8.col-md-pull-4 > section > div.table-view > div.row > div.col-sm-7.pad-right-0 > ul > li:nth-child(2) > div.col-xs-4.fac-lbl-light').to_s
profile_doc.css('body > section.main_content.clearfix > div > div.content_left > div.innerwrapper > div:nth-child(1) > div > div.col-md-8.col-md-pull-4 > section > div.table-view > div.row > div.col-sm-7.pad-right-0 > ul > li:nth-child(1) > div.col-xs-4.fac-lbl-light').to_s
profile_doc.css('.plyr_details ul li')[0].to_s
profile_doc.css('.plyr_details ul').to_s
profile_doc.css('.plyr_details ul')
profile_url
birthdate
continue
url
doc.css('.roster tr').to_s
doc.css('.roster tr')
quit
players.seasons
players
continue
Team.all
Player.new
profile_doc.css('.plyr_details ul li a')[0].text.strip
profile_doc.css('.plyr_details ul li a')[0].text
profile_doc.css('.plyr_details ul li a')[1].text
profile_doc.css('.plyr_details a')[1].text
profile_doc.css('.plyr_details a')[0].text
profile_doc.css('.plyr_details a')[0]
profile_doc
profile_doc.css('plyr_details')
profile_doc.css('plyr_details a')[0]
quit
row.css('.sorted span a')[0]['href']
row.css('.sorted span a')['href']
row.css('.sorted span a')[href]
row.css('.sorted span a').href
row.css('.sorted span a').to_s
row.css('.sorted span a')
row.css('.sorted span a')["value"]
row.css('.sorted span a')[value]
row.css('.sorted span a').value
row.css('.sorted span a')
row.css('.sorted span a').href
shoots
height
weight
continue
row.css('.height').text.strip
row.css('.shoots').text.strip
row.css('.shoots').text.tr('\n', '')
row.css('.shoots').text.tr(' ', '')
shoots
weight
height
continue
weight
row.css('.height').text.tr(' ', '')
row.css('.height').text.tr(' ')
row.css('.height').text
row.css('.height')
row.css('.height').text.to_s.split("'").join("'").
row.css('.height').text.split("'").join("'")
row.css('.height').text.split("'").map { |h| puts h }
row.css('.height').text.split("'")
height_split
height
continue
weight
height
player_name[/#{full_name}/].nil?
player_name[/#{full_name}/]
continue
player_name
quit
row.css('.sorted span a').text
row.css('.sorted span a')
row.css('.sorted')
row.css('td .sorted')
row.css('td .sorted span a').to_s
row.css('td').to_s
row.css('td')
row.css('td .sorted span a').text
quit
row.css('td')quit
row.css('td').count
row.to_s
continue
row.to_s
continue
row.css('td').count
row.to_s
row
continue
doc.css('.roster tr').each do |row|
doc.css('.roster tr').count
doc.css('.roster tr')
season
seasons
doc.css('.roster')
doc.css('table')
doc
continue
url
year = season.season_abbreviation[/PO/].nil? ? season.season_abbreviation.split('-').map { |s| "20#{s}" }.join("-") : "20#{season.season_abbreviation.tr('PO', '').to_i - 1}-20#{season.season_abbreviation.tr('PO', '')}"
year = season.season_abbreviation[/PO/].nil? ? season.season_abbreviation.split('-').map { |s| "20#{s}" }.join("-") : "20#{season.season_abbreviation.tr('PO', '').to_i - 1} -20#{season.season_abbreviation.tr('PO', '')}"
season = Skater.find_by(player_id: 100, season_id: 19)
year
continue
Season.first.skaters.first
Season.first
year
continue
season
continue
players.first.seasons.order(season_id: :desc).first
player.seasons.order(season_id: :desc).first
players.seasons
players
quit
game_file
continue
next
game
continue
points
team_stats[:forfeit_wins].to_i * 2
team_stats[:forfeit_wins]
team_stats
continue
team_stats
continue
game.is_forfeit
game.winning_team_id.to_i == game.visiting_team_id.to_i
continue
points
next
team_stats[:forfeit_wins]
continue
team_stats
team_stats[:forfeit_wins]
continue
birthdate
shoots
weight
height
continue
JSON.parse(test)
test = doc.to_s[/\"info\"(.*?)\"profileImage\"/][7..-1] + ':""}'
doc.to_s[/\"info\"(.*?)\"profileImage\"/][7..-1] + ':""}'
doc.to_s[/\"info\"(.*?)\"profileImage\"/][7..-1] + ':""}')
doc.to_s[/\"info\"(.*?)\"profileImage\"/][7..-1]
doc.to_s[/\"info\"(.*?)\"profileImage\"/]
player_info
player_info["shoots"]
continue
JSON.parse(player_info[7..-1] + ':""}')
JSON.parse(player_info[7..-1])
JSON.parse(player_info[6..-1])
JSON.parse(player_info[5..-1])
JSON.parse(player_info[4..-1])
JSON.parse(player_info[3..-1])
JSON.parse(player_info)
player_info = doc.to_s[/\"info\"(.*?)\"profileImage\"/]
JSON.parse(doc.to_s.tr("angular.callbacks._1", ''))
doc.to_s.tr("angular.callbacks._1", '')
doc.tr("angular.callbacks._1", '')
doc.type
doc.type?
JSON.parse(doc)
doc
quit
hh = player_info[/\"height\"(.*?)\,/].split(':')[1].tr('"', "").tr(',', "")
JSON.parse(js[5..-2])[B
JSON.parse(js[6..-2])
JSON.parse(js[4..-2])
JSON.parse(js[2..-2])
JSON.parse(js[1..-2] + "}")
JSON.parse(js[0..-2] + "}}")
JSON.parse(js[0..-2] + "}")
JSON.parse(js[0..-2])
JSON.parse(js[8..-2])
JSON.parse(js[0..-2])
JSON.parse(js[1..-2])
JSON.parse(js[2..-2])
JSON.parse(js[1..-2])
JSON.parse(js[1..-3])
js
JSON.parse(js[0..-2])
JSON.parse(js)
js = doc.to_s.split("._1(")[1].split('"currentSeason"')[0]
doc.to_s.split("._1(")[1].split('"currentSeason"')[0]
doc.to_s.split("._1(")[1]
doc.to_s.split(".1(")[1]
doc.to_s.split(".1(")[1].split('"currentSeason"')[0]
doc.to_s
JSON.parse(doc.to_s)
doc.to_s
doc
    "teamName": "KUNLUN RED STAR    "teamName": "KUNLUN RED STAR    "teamName": "KUNLUN RED STAR    "me    "teamName": "KUNLUN RED STAR    "teamName": "KUNLUN RED STAR    "teamName": "KUNLUN RED STAR    "me    "teamName": "KUNLUN RED STAR    "teamName": "KUNLUN RED STAR    "teamName": "KUNLUN RED STAR    "me    "teamName": "KUNLUN RED STAR    "teamName": "KUNLUN RED STAR    "teamName": "KUNLUN RED STAR    "me    "teamName": "KUNLUN RED STAR    "teamName": "KUNLUN RED STAR    "teamName": "KUNLUN RED STAR    "me    "teamName": "KUNLUN RED STAR    "teamName": "KUNLUN RED STAR    "teamName": "KUNLUN RED STAR    "me    "teamName": "KUNLUN RED STAR    "teamName": "KUNLUN RED STAR    "teamName": "KUNLUN RED STAR    "me    "teamName": "KUNLUN RED STAR    "teamName": "KUNLUN RED STAR    "teamName": "KUNLUN RED STAR    "me    "teamName": "KUNLUN RED STAR    "teamName": "KUNLUN RED STAR    "teamName": "KUNLUN RED STAR    "me    "teamName": "KUNLUN RED STAR    "teamName": "KUNLUN RED STAR    "teamName": "KUNLUN RED STA  '
    "bio": "<p><strong>Draft:</strong>&nbsp;<em>Boston Blades</em></p><ul><li>2011 - 14th overall</li></ul><p><strong>CWHL Awards:</strong></p><ul><li>2018 CWHL MVP (Kunlun Red Star)</li><li>2018 Angela James&nbsp;Bowl (Kunlun Red Star)</li><li>2014-15 CWHL All-Star (Boston Blades)</li><li>2013 Clarkson Cup Champion (Boston Blades)</li></ul><p><strong>College:</strong>&nbsp;<em>Boston College (2006-2011)</em></p><p><strong>Professional:</strong><em> Connecticut Whale - NWHL (2015-2017)</em></p><p><strong>International:</strong><em> Team USA</em></p><ul><li>2017     "bio": "<p><stronship (gold)</l    "bio": "<p><strong>DChampionship (gold)</li><li>    "bio": "<p><strong>Drafr)    "bio":012 - IIHF     "bio"mpionship     "bio": i><li>201    "bio": "<p><strpionship (gold)</li><li>2010 - Olympic Games (silver)</li><li>2009 - IIHF World Champ    "bio": "<p><strong>Draft: I    "bio" Championship (gold)</li></ul>",
    "teamImage": "https://assets.leaguestat.com/cwhl/logos/10_18.jpg",
    "profileImage": "https://assets.leaguestat.com/cwhl/240x240/204.jpg",
    "birthDate": "1988-01-13",
    "weight": "",
    "height_hyphenated": "5-5",
    "height_sans_hyphen": "5'5",
    "height": "5'5",
    "catches": "R",
    "shoots": "R",
    "position": "F",
    "lastName": "Stack (I)",
    "firstName": "Kelli",
    "jerseyNumber": "16",
  "info": {
angular.callbacks._1({
// https://lscluster.hockeytech.com/feed/index.php?feed=statviewfeed&view=player&player_id=204&season_id=&site_id=2&key=eb62889ab4dfb04e&client_code=cwhl&league_id=&lang=en&statsType=standard&callback=angular.callbacks._1
st = '// 20180817022307

                                                    0                  "sh": 0,
